!============================================================================!
!         Environnement Canada         |        Environment Canada           !
!                                      |                                     !
! - Service meteorologique du Canada   | - Meteorological Service of Canada  !
! - Direction generale des sciences    | - Science and Technology Branch     !
!   et de la technologie               |                                     !
!============================================================================!
!                            http://www.ec.gc.ca                             !
!============================================================================!
!
! Projet/Project : GEM-MACH
! Fichier/File   : mach_aurams_cwc_per_bin.ftn90
! Creation       : S. Menard, W. Gong, S. Gravel, GEM-MACH, July 2008
! Description    : Compute atmospheric pressure
!
! Extra info     :
!
! Arguments  IN
!                zmlwc      -->  CWC content (bulk) (kg/kg)
!                F_chm_ni   -->  grid size in x
!                ilev       -->  number of vertical levels
!                xrow(icdn) -->  Tracer array (kg/kg) but at index xrow(icdn)=no cloud droplet/m3
!                rcrit      -->  Critical radius expressed in term of real bin index which is determined
!                                from aerosol activation ( + un-activated part)
!                aeronum    -->  Number concentration of aerosols (/kg)
!                totnum     -->  Accumulated number of aerosol (1/m3) for each grid and from bin i to nsize
!                roarow     -->  Air density (kg/m3)
!                icdn       -->  Pointer location of ccn
!                il1        -->  Minimum index for F_chm_ni
!                il2        -->  Maximum index for F_chm_ni
!                ntr        -->  Number of tracers
!                nsize      -->  Total number of size bin
!
!            OUT
!                Q_bin      -->  CWC per activated size bin (kg/m3)
!
!=============================================================================

subroutine mach_aurams_cwc_per_bin (q_bin, zmlwc, xrow, rcrit, aeronum, totnum, roarow, icdn, &
                                    il1, il2, F_chm_ni, ilev, ntr, nsize, kount, jlat)
   use chm_utils_mod
   implicit none

!  watch out nsize is in reality isize pass as argument
   integer, intent(in) :: il1, il2, F_chm_ni, ilev, nsize, ntr, icdn, kount, jlat
   real,    intent(in),  dimension(F_chm_ni, ilev, 2)       :: zmlwc
   real,    intent(in),  dimension(F_chm_ni, ilev + 1, ntr) :: xrow
   real,    intent(in),  dimension(F_chm_ni, ilev)          :: rcrit, roarow
   real,    intent(in),  dimension(F_chm_ni, ilev, nsize)   :: aeronum, totnum
   real,    intent(out), dimension(F_chm_ni, ilev, nsize)   :: q_bin

! local variables
   integer :: isize, i, l
!  watch out nsize is in reality isize pass as argument
   real,    dimension(F_chm_ni, ilev) :: h2o
   integer, dimension(F_chm_ni, ilev) :: isize_0
   logical local_dbg

   local_dbg = (.false. .or. global_debug)

   h2o = 0.0

!  initialisation of q_bin
   do isize = 1, nsize
      do l = 1, ilev
         do i = il1, il2
            q_bin(i, l, isize) = 0.0
          end do
      end do
   end do

!  calculation of q_bin
   do l = 1, ilev
      do i = il1, il2
         if ((zmlwc(i, l, 1) + zmlwc(i, l, 2)) > 0.0 .and. xrow(i, l + 1, icdn) <= 0.0) then
            if(local_dbg) then
               write(chm_lun_out, *)'cwc_pb ', i, l + 1, xrow(i, l + 1, icdn), (zmlwc(i, l, 1) + zmlwc(i, l, 2)), jlat, kount
            end if
         end if
         if ((zmlwc(i, l, 1) + zmlwc(i, l, 2)) > 0.0 .and. xrow(i, l + 1, icdn) > 1.E-7) then
            h2o(i, l) = (zmlwc(i, l, 1) + zmlwc(i, l, 2)) / xrow(i, l + 1, icdn) * roarow(i, l)
!           isize_0(i, l) = int(rcrit(i, l))
!
!   updated according to Wanmin's email Jul22, 2008 (see Mantis842)
!
            isize_0(i, l) = min(nsize, int(rcrit(i, l)))
            if(isize_0(i,l) < nsize) then
              do isize = nsize, isize_0(i, l), -1
                q_bin(i, l, isize) = h2o(i, l) * aeronum(i, l, isize) * roarow(i, l)
              end do
              q_bin(i, l, isize_0(i, l)) = h2o(i, l) * (xrow(i, l + 1, icdn) - totnum(i, l, isize_0(i, l) + 1))
            else
              q_bin(i, l, nsize) = h2o(i, l) * xrow(i, l+1, icdn)
            end if
         end if

 10   continue
      end do
   end do

return
end
