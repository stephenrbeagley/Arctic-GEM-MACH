!============================================================================!
!         Environnement Canada         |        Environment Canada           !
!                                      |                                     !
! - Service meteorologique du Canada   | - Meteorological Service of Canada  !
! - Direction generale des sciences    | - Science and Technology Branch     !
!   et de la technologie               |                                     !
!============================================================================!
!                            http://www.ec.gc.ca                             !
!============================================================================!
!
! Projet/Project : GEM-MACH
! Fichier/File   : chm_mjrpts_translate.ftn90
! Creation       : A. Kallaur and S. Menard - July 2007
! Description    : Translate the local grid coordinates by offsets chm_off{i,j}
!
! Extra info     :
!
! Arguments: IN
!              fin        --> Array of local grid point locations to be translated
!              nc         --> size of fin (single dimension).
!              grdpt_type --> String indentifying whether incoming array fin is
!                             translated by i or j offsets.
!
!==============================================================================
subroutine chm_mjrpts_translate(fin,ns,grdpt_type)
   use chm_utils_mod
   use chm_ptopo_grid_mod
   implicit  none

   integer,            intent(in)     :: ns
   real,               intent(inout)  :: fin(ns)
   character(len = *), intent(in)     :: grdpt_type

!  external functions
   integer  longueur
   external longueur

!  Local variables
   integer  :: i,kount
   real     :: up_lim
   real     :: offset

!  Determine whether we got I or J coords, and set offset and
!  upper limit to computed domain accordingly.
   select case (grdpt_type(1:longueur(grdpt_type)))
     case ( 'GILC' )
          offset = real(chm_offi)
          up_lim = real(chm_ni)
     case ( 'GJLC' )
          offset = real(chm_offj)
          up_lim = real(chm_nj)
     case default
            write(chm_lun_out, *) '###  Error in chm_mjrpts_translate   ###'
            write(chm_lun_out, *) '#  Illegal char key: ', grdpt_type
            write(chm_lun_out, *) '#  Acceptable values: {GILC,GILC} #'
            write(chm_lun_out, *) '###            ABORT            ###'
            call chm_stop('chm_mjrpts_translate ', -1)
   end select

   do i=1,ns
      fin(i) = fin(i) - offset
   enddo

   return
end subroutine chm_mjrpts_translate