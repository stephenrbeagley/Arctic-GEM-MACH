!============================================================================!
!         Environnement Canada         |        Environment Canada           !
!                                      |                                     !
! - Service meteorologique du Canada   | - Meteorological Service of Canada  !
! - Direction generale des sciences    | - Science and Technology Branch     !
!   et de la technologie               |                                     !
!============================================================================!
!                            http://www.ec.gc.ca                             !
!============================================================================!
!
! Projet/Project : GEM-MACH
! Fichier/File   : mach_cam_aeroact.ftn90
! Creation       : S. Gong, W. Gong, V. Bouchet, S. Gravel, and
!                  B. Pabla for GEM-MACH, June 2008
!
! Description    : Calculation of activated aerosol
!
! Extra info     : - First version created by S. Gong Jan 12 1998 for CAM
!                    A simplified version of ghan 1993 activation
!                    parameterization scheme with constant d parameter.
!                  - The cloud number density is now computed from jones et al
!                    1994 parameterization which relates the total aerosol
!                    number to cloud droplet number. (S. Gong, Dec 02, 1998)
!
! Arguments:  IN
!               ilev    -> no. z-direct. vertical levels
!               lev     -> ilev+1
!               F_chm_ni-> number of longitude grid points
!               il1     -> minimum index for F_chm_ni
!               il2     -> maximum index for F_chm_ni
!               rhsize  -> Unactivated ambient aerosol wet
!               ntr     -> Number of tracers
!               isize   -> size bin number for aerosols
!               rhop    -> Final wet density
!               icdn    -> Pointer location of ccn
!               wrow    -> Model vertical wind speed
!               wsub    -> 0.0
!               nsub    -> No. of subgrid for caculating
!               aeronum -> Number conconcenration
!               zmlwc   -> CWC content (bulk) (kg/kg)
!               roarow  -> air density (kg/m3)
!               cam     -> Identifier for CAM using with gas chemistry of online/offline (1.0/10.0)
!               jlat    -> J Slice number
!
!             OUT
!               RADCLD  -> Mean radius of cloud droplets (um)
!               XROW    -> cloud droplet number density [1/m3]
!               TOTNUM  -> Accumulated number of aerosol (1/m3) for each grid and from bin i to nsiz
!               RCRITS  -> Bin Number (+ Fraction Un-Activated)
!               CLSIZE  -> Activated ambient aerosol wet
!
!============================================================================

subroutine mach_cam_aeroact (ilev, F_chm_ni, il1, il2, RADCLD,          &
                             TOTNUM, rhsize, ntr, isize, rhop,     &
                             icdn, wrow, XROW, wsub, RCRIT,        &
                             nsub, aeronum, zmlwc, roarow, CLSIZE, &
                             cam, kount, jlat, nc_out)
   use chm_utils_mod

   implicit none

   integer, intent(in) :: F_chm_ni, ilev, isize, ntr, nsub
   integer, intent(in) :: il1, il2, icdn
   integer, intent(in) :: kount, jlat

   real, intent(in)    :: cam
   real, intent(in),  dimension(F_chm_ni, ilev)          :: wrow, roarow
   real, intent(in),  dimension(F_chm_ni, ilev, isize)   :: rhsize, rhop, aeronum
   real, intent(in),  dimension(F_chm_ni, ilev, nsub)    :: wsub
   real, intent(in),  dimension(F_chm_ni, ilev, 2)       :: zmlwc
   real, intent(in),  dimension(F_chm_ni, ilev)          :: nc_out
   real, intent(out), dimension(F_chm_ni, ilev)          :: radcld
   real, intent(inout), dimension(F_chm_ni, ilev)        :: rcrit
   real, intent(out), dimension(F_chm_ni, ilev, isize)   :: totnum, clsize
   real, intent(out), dimension(F_chm_ni, ilev + 1, ntr) :: xrow

!  local variables
   integer :: n, n1, l, i, j
   real    ::  d, cub, wtot, tona, rleft, rhopw, h2o, rwi
   real, dimension(F_chm_ni, ilev) :: rcoex
   logical local_dbg

#include "chm_aerosize.cdk"

   d     = 0.0
   cub   = 0.0
   wtot  = 0.0
   tona  = 0.0
   rleft = 0.0
   rhopw = 0.0
   h2o   = 0.0
   rwi   = 0.0
   rcoex = 0.0

   local_dbg = (.false. .or. global_debug)

   call tmg_start0 ( 92, 'mach_cam_aeroact')

!  accumulate number of aerosols[/m^3] for each grid

   totnum = 0.0
   rcoex = 0.0
   do n = isize, 1, -1
      do n1 = n, isize
         do l = 1, ilev
            do i = il1, il2
               totnum(i, l, n) = totnum(i, l, n) + aeronum(i, l, n1)  * roarow(i, l)
               rcrit(i, l) = real(isize + 1)
               if ((cam > 1.0 .and. cam < 10.0) .or. (cam > 10.0 .and. cam < 90.0)) then
                  xrow(i, l + 1, icdn) = 0.0
               end if
            end do
         end do
      end do
   end do

   do n = 1, isize
      do l = 1, ilev
         do i = il1, il2
            if (totnum(i, l, n) <= 0.0) then
               if(local_dbg) then
                  write(chm_lun_out, *)'cwc_pb in cam ', i, l, n, kount, jlat, totnum(i, l, n)
               end if
            end if
         end do
      end do
   end do

!  Compute the cloud droplet number [1/m^3 air]
!  for the current version, d [m^4 s^-1] is assumed constant

   d = 3.4e-11
   cub = 1.0 / 3.0
   if (cam == 1.0 .or. cam == 10.0) go to 100
   do j = 1, nsub
      do l = 1, ilev
         do i = il1, il2
            wtot = wsub(i, l, j) + wrow(i, l)
            if (wtot < 0.0) then
               xrow(i, l + 1, icdn) = xrow(i, l + 1, icdn) + totnum(i, l, 1) / nsub *  &
                                      abs(wtot) / (abs(wtot) + d * totnum(i, l, 1))
            end if
         end do
      end do
   end do

!  Find the activated bin number
!  define: rcrit = bin number + % un-actived
!  e.g.    rcrit = 4.3 means bin 4 and over are activated with 30% un-activated in bin 4.

  100 continue

   if(chm_indirect .and. (kount > chm_strt_step)) then
!
!  >>> This is the point where arg_act was called in AURAMS.
!  Note that here, the value of rcrit is calculated locally, based on the
!  cloud droplet number calculated earlier in the physics.
!  Cloud droplet number density [1/m3] is from Abdul-Razzak & Ghan(2005),
!  calculated in the microphysics

   do l = 1, ilev
      do i = il1, il2
! Replace with microphysics value of ncplus:
         xrow(i, l + 1, icdn) = nc_out(i,l)
      end do
   end do
   else
!  cloud droplet number density [1/m3] from jones et al 1994

   do l = 1, ilev
      do i = il1, il2
         tona = totnum(i, l, 1) * 1.0e-6
         xrow(i, l + 1, icdn) = 375.0e6 * (1.0 - exp(-2.5e-3 * tona))
      end do
   end do
!
   end if

   do n = isize, 2, -1
      do l = 1, ilev
         do i = il1, il2
            if (xrow(i, l + 1, icdn) > totnum(i, l, n) .and. xrow(i, l + 1, icdn) <= totnum(i, l, n - 1)) then
               rleft = (totnum(i, l, n - 1) - xrow(i, l + 1, icdn)) / (aeronum(i, l, n - 1) * roarow(i, l))
               if ((zmlwc(i, l, 1) + zmlwc(i, l, 2)) > 0) then
                  rcrit(i, l) = real(n - 1) + min(1.0, rleft)
               end if
            end if
            if (xrow(i, l + 1, icdn) > totnum(i, l, 1)) then
               rcrit(i, l) = 1.0
            end if
         end do
      end do
   end do

!  Distribute cloud liquid water [kg/kg] into activated bins according to the cloud number
!  density in each activated bin and estimate cloud droplet radius.
!  Cloud droplet radius at the interrupted bin where aerosol and cloud doplet co-exist is
!  saved in rcoex(i, l). For fully actviated bins, the rhsize is updated.

   rhopw = 1000.00
   do n = 1, isize
      do l = 1, ilev
         do i = il1, il2
            if (n >= int(rcrit(i, l)) .and. xrow(i, l + 1, icdn) > 1.E-7 .and.  &
                zmlwc(i, l, 1) + zmlwc(i, l, 2) > 0.0) then
                  h2o = (zmlwc(i, l, 1) + zmlwc(i, l, 2)) /                   &
                        (xrow(i, l + 1, icdn) / roarow(i, l))
                  rwi = rhsize(i, l, n)
                  if (n == int(rcrit(i, l))) then
                     rcoex(i, l) = rhsize(i, l, n)

!  CLSIZE(I, L, N)=RHSIZE(I, L, N) we replace that line !!!!!!
!
!  explanation:

!  In mach_cam_AEROACT
!  CLSIZE in this bin is not calculated, instead it is given the aerosol dry
!  size. The wet size and dry size can be 100 times different. With CLSIZE
!  much smaller the droplet size for the cloud drops in this bin, the mass
!  transfer rate will be greatly enhanced (proportional to 1/r^3 - 1/r^2 at
!  the moment in UPAQR.f). What I did in my box model is to calculate the
!  CLSIZE in this bin the same way as for the other activated bins. Could you
!  implement this change and see how much it affects the threshold you set
!  for q_bin? Wanmin G .12 June 2000.

                      clsize(i, l, n) = ((rwi * rwi * rwi * rhop(i, l, n) +  &
                                         h2o / 4.189) / rhopw) ** cub
                   else
                      clsize(i, l, n) = ((rwi * rwi * rwi * rhop(i, l, n) +  &
                                         h2o / 4.189) / rhopw) ** cub
                   end if
                end if
            end do
         end do
      end do

   do l = 1, ilev
      do i = il1, il2
         if (xrow(i, l + 1, icdn) > 1.E-7 .and. zmlwc(i, l, 1) + zmlwc(i, l, 2) > 0.0) then
            h2o = (zmlwc(i, l, 1) + zmlwc(i, l, 2)) / (xrow(i, l + 1, icdn) / roarow(i, l))
            radcld(i, l) = ((h2o / 4.189) / rhopw) ** cub * 1.0e6
         else
            radcld(i, l) = 0.0
         end if
      end do
   end do

   call tmg_stop0 ( 92 )

   return
end
